{"version":3,"sources":["SidebarChat.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","react_default","a","createElement","className","Avatar","Sidebar","src","IconButton","DonutLarge_default","Chat_default","MoreVert_default","SearchOutlined","placeholder","type","src_SidebarChat_0","instance","axios","create","baseURL","Chat","_ref","messages","_React$useState","React","useState","_React$useState2","Object","slicedToArray","input","setinput","sendMsg","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","post","message","name","Math","random","toString","substring","timestamp","Date","split","received","Boolean","round","stop","_x","apply","this","arguments","AttachFile","esm_MoreVert","map","msg","ind","key","concat","EmojiEmotions_default","value","onChange","target","onClick","Mic_default","App","_useState","_useState2","setMessages","useEffect","get","then","response","data","channel","Pusher","cluster","subscribe","bind","newMessage","toConsumableArray","unbind_all","unsubscribe","src_Sidebar_0","src_Chat_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.63f7b73d.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SidebarChat.css\"\r\nimport { Avatar } from '@mui/material';\r\n\r\nconst SidebarChat = () => {\r\n  return (\r\n    <div className='sidebarChat'>\r\n        <Avatar />\r\n        <div className='sidebarChat_info'>\r\n            <h2>Room Name</h2>\r\n            <p>Last message on the room</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarChat","import React from 'react'\r\nimport \"./Sidebar.css\"\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\r\nimport { Avatar, IconButton } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { SearchOutlined } from '@mui/icons-material'\r\nimport SidebarChat from './SidebarChat';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className='sidebar'>\r\n\r\n        <div className='sidebar_header'>\r\n\r\n          <Avatar src='https://cdn.pixabay.com/photo/2016/01/31/19/41/apple-1172060_960_720.jpg'/>\r\n\r\n          <div className='sidebar_headerRight'>\r\n              \r\n            <IconButton>\r\n              <DonutLargeIcon />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <ChatIcon />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <MoreVertIcon />\r\n            </IconButton>            \r\n              \r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className='sidebar_search'>\r\n            <div className='sidebar_searchContainer'>\r\n              <SearchOutlined />\r\n              <input placeholder='Search or Start new chat' type='text' />\r\n            </div>\r\n        </div>\r\n        \r\n        <div className='sidebar_chats'>\r\n          <SidebarChat />\r\n          <SidebarChat />\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://whatsappclone.mhuzaifa4.repl.co'\r\n})\r\n\r\nexport default instance","import React from 'react'\r\nimport \"./Chat.css\"\r\nimport { Avatar, IconButton } from '@mui/material';\r\nimport { SearchOutlined, MoreVert, AttachFile } from '@mui/icons-material'\r\nimport EmojiEmotionsIcon from '@mui/icons-material/EmojiEmotions';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport axios from './axios';\r\n\r\nconst Chat = ({ messages }) => {\r\n\r\n  const [input, setinput] = React.useState(\"\")\r\n\r\n  const sendMsg = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios.post('/messages/new', {\r\n      \"message\" : input,\r\n      \"name\": (Math.random() + 1).toString(36).substring(7),\r\n      \"timestamp\": Date().split(' ')[4],\r\n      \"received\": Boolean(Math.round(Math.random()))\r\n    })\r\n\r\n    setinput('');\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='chat'>\r\n\r\n        <div className='chat_header'>\r\n          <Avatar />\r\n\r\n          <div className='chat_headerInfo'>\r\n            <h3>Room Name</h3>\r\n            <p>Last scene</p>\r\n          </div>\r\n\r\n          <div className='chat_headerRight'>\r\n\r\n            <IconButton>\r\n              <SearchOutlined />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <AttachFile />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <MoreVert />\r\n            </IconButton>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className='chat_body'>\r\n          {\r\n            messages.map((msg, ind) => (\r\n              <p key={ind} className={`chat_message ${msg.received && \"chat_receiver\"}`}>\r\n            \r\n                <span className='chat_name'> { msg.name } </span>\r\n                {msg.message}\r\n                <span className='chat_timestamp'> { msg.timestamp } </span>\r\n    \r\n              </p>\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <div className='chat_footer'>\r\n\r\n          <EmojiEmotionsIcon />\r\n          <form>\r\n            <input value={input} onChange={ e => setinput(e.target.value) } placeholder='Type a message...' type='text'/>\r\n            <button onClick={sendMsg} type='submit'>Send a message</button>\r\n          </form>\r\n          <MicIcon />\r\n\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport Pusher from 'pusher-js'\r\nimport axios from './axios'\r\n\r\nfunction App() {\r\n\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/messages/sync')\r\n    .then(response => {\r\n      setMessages(response.data)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    const pusher = new Pusher('f67bd1478faa505418f5', {\r\n      cluster: 'eu'\r\n    });\r\n\r\n    const channel = pusher.subscribe('messages');\r\n    channel.bind('inserted', (newMessage) => {\r\n      setMessages([...messages, newMessage])\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    }\r\n\r\n  }, [messages])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      \r\n      <div className='app_body'>\r\n        <Sidebar />\r\n        <Chat messages={messages} />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}